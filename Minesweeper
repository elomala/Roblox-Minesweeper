local ts = game:GetService("TweenService")

local colors = {
	Color3.fromRGB(41, 170, 51), Color3.fromRGB(37, 118, 65) -- two colors between which the boxes alternate
}

local function neighbours(number, rowsize) -- this function returns the blocks around the block represented by the "number" variable.
	if type(number) == "string" then tonumber(number) end -- since name is stored as a string it is to be converted to a number for inequality operators
	if type(rowsize) == "string" then tonumber(rowsize) end
	if number == 1 then
		return {2,1+rowsize,rowsize+2}
	elseif number == rowsize then
		return {rowsize-1, 2*rowsize, 2*rowsize - 1}
	elseif number == rowsize*rowsize then
		return {number-1, number - rowsize, number - (rowsize+1)}
	elseif number == rowsize * rowsize - (rowsize-1) then
		return {number+1, number - rowsize, number - (rowsize-1)}
	elseif math.floor(number/rowsize) == 0 then
		return {number + (rowsize-1), number + rowsize, number + (rowsize+1), number + 1, number -1}
	elseif math.ceil(number/rowsize) == rowsize then
		return {number + 1, number - 1, number - rowsize, number - (rowsize-1), number - (rowsize+1)}
	elseif number%rowsize == 1 then
		return {number + rowsize, number - rowsize, number + 1, number - (rowsize-1), number + (rowsize+1)}
	elseif number%rowsize == 0 then
		return {number + rowsize, number - rowsize, number -1, number + (rowsize-1), number - (rowsize+1)}
	else
		return {number + rowsize, number - rowsize, number -1, number +1 , number + (rowsize-1), number - (rowsize-1), number - (rowsize+1), number + (rowsize+1)}
	end
end

local function generate(size, color) -- used to generate the boxes on which the game is played
	local model = Instance.new("Model")
	local startingpart = game.ServerStorage.GameStuff.minesweeper.startingpart:Clone() -- Make a cube beforehand and store it so that it can be cloned again and again
	startingpart.Color = colors[1]
	startingpart.Name = 1
	startingpart.Position = Vector3.new(10000,10000,10000)
	startingpart.Parent = model
	local lastpart = startingpart
	for i = 1, (size*size)-1, 1 do -- minus 1 because one box is already placed and used as starting point
		lastpart = lastpart:Clone()
		lastpart.Name = i+1
		lastpart.Color = colors[(i%2)+1] -- this is a cool way to alternate colors
		if i%size ~= 0 then
			lastpart.Position = Vector3.new(lastpart.Position.X+lastpart.Size.X,lastpart.Position.Y,lastpart.Position.Z)
		else
			lastpart.Position = startingpart.Position + Vector3.new(0,0,5)
			startingpart = lastpart
		end
		lastpart.Parent = model
	end
	return model
end

function module.mineSweeper(size:number, pos, player:Player) 
-- size will the number of rows and coloumns. Currently, number of rows and coloumns will be same. You can have rectangular grid by a bit of editing.
-- pos will be the position where the whole game is supposed to spawn
-- player will refer to the only player that can impact the game to prevent sabotaging.

	local bombs = {}
	local safe = model:GetChildren()
	local bombnumber = math.random(math.ceil((size*size)*(13/100)),math.ceil((size*size)*(18/100))) -- randomly selected number of bombs having density 13-18%
	print(bombnumber/#safe * 100) -- prints % density of bombs
	for i, v in model:GetChildren() do
		local deb = false
		v.ClickDetector.MouseClick:Connect(function(plr) -- clicking allows you to place flags
			if deb then return end
			if player == plr then
				deb = true
				v.Flag.FlagPlace:Play()
				if v.Flag.Transparency == 0 then
					v.Flag.Transparency = 1
				else
					v.Flag.Transparency = 0
				end
				task.wait(0.4) deb = false
			end
		end)
	end
	for i = 1, bombnumber, 1 do
		local no = math.random(#safe)
		table.insert(bombs, safe[no])
		table.remove(safe, no)
	end
	for i, v in pairs(bombs) do -- ADDING THIS TO BOMBS TO TRIP EXPLOITERS
		local surf = game.ServerStorage.GameStuff.minesweeper.SurfaceGui:Clone()
		surf.Enabled = false
		surf.Parent = v 
		local textlabel = surf.TextLabel
		textlabel.Text = tostring(math.random(1,5))-- assigns random number to all bombs to trip them exploiters
	end
	local zeros = {} 
	for i, v in pairs(safe) do 
		local surf = game.ServerStorage.GameStuff.minesweeper.SurfaceGui:Clone()
		surf.Enabled = false
		surf.Parent = v 
		local textlabel = surf.TextLabel
		local current = v.Name
		local number = 0
		local surround = neighbours(current, size)
		for i, v in surround do
			if table.find(bombs, model:FindFirstChild(tostring(v))) then
				number += 1
			end
		end
		if number == 0 then table.insert(zeros, v)
			number = math.random(1,5)	-- assigns random number to all 0s to trip them exploiters
		end
		surf.TextLabel.Text = tostring(number) -- sets the number
	end
end
