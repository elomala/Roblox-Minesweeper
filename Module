local function neighbours(number, rowsize) -- this function returns the blocks around the block represented by the "number" variable.
	if type(number) == "string" then tonumber(number) end -- since name is stored as a string it is to be converted to a number for inequality operators
	if type(rowsize) == "string" then tonumber(rowsize) end
	if number == 1 then
		return {2,1+rowsize,rowsize+2}
	elseif number == rowsize then
		return {rowsize-1, 2*rowsize, 2*rowsize - 1}
	elseif number == rowsize*rowsize then
		return {number-1, number - rowsize, number - (rowsize+1)}
	elseif number == rowsize * rowsize - (rowsize-1) then
		return {number+1, number - rowsize, number - (rowsize-1)}
	elseif math.floor(number/rowsize) == 0 then
		return {number + (rowsize-1), number + rowsize, number + (rowsize+1), number + 1, number -1}
	elseif math.ceil(number/rowsize) == rowsize then
		return {number + 1, number - 1, number - rowsize, number - (rowsize-1), number - (rowsize+1)}
	elseif number%rowsize == 1 then
		return {number + rowsize, number - rowsize, number + 1, number - (rowsize-1), number + (rowsize+1)}
	elseif number%rowsize == 0 then
		return {number + rowsize, number - rowsize, number -1, number + (rowsize-1), number - (rowsize+1)}
	else
		return {number + rowsize, number - rowsize, number -1, number +1 , number + (rowsize-1), number - (rowsize-1), number - (rowsize+1), number + (rowsize+1)}
	end
end

module = {}

return module
